{
  "swagger": "2.0",
  "info": {
    "description": "Test task as part of the selection for an internship from Relex.",
    "version": "1.0",
    "title": "Mini Social Network API",
    "contact": {
      "name": "Ekaterina Selivanova",
      "url": "https://github.com/katseliv",
      "email": "selivanova_e_a@sc.vsu.ru"
    }
  },
  "host": "localhost:8080",
  "basePath": "/",
  "tags": [
    {
      "name": "auth-rest-controller",
      "description": "Auth Rest Controller"
    },
    {
      "name": "friend-rest-controller",
      "description": "Friend Rest Controller"
    },
    {
      "name": "message-rest-controller",
      "description": "Message Rest Controller"
    },
    {
      "name": "user-rest-controller",
      "description": "User Rest Controller"
    }
  ],
  "paths": {
    "/api/v1/friends/hide": {
      "put": {
        "tags": [
          "friend-rest-controller"
        ],
        "summary": "hideFriendsList",
        "operationId": "hideFriendsListUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/friends/list": {
      "get": {
        "tags": [
          "friend-rest-controller"
        ],
        "summary": "getFriends",
        "operationId": "getFriendsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allParams",
            "in": "query",
            "description": "allParams",
            "required": false,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewListPage«FriendForListDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/friends/view/{userId}": {
      "get": {
        "tags": [
          "friend-rest-controller"
        ],
        "summary": "getOtherUserFriends",
        "operationId": "getOtherUserFriendsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allParams",
            "in": "query",
            "description": "allParams",
            "required": false,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewListPage«FriendForListDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/friends/{friendId}": {
      "post": {
        "tags": [
          "friend-rest-controller"
        ],
        "summary": "createFriend",
        "operationId": "createFriendUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "friendId",
            "in": "path",
            "description": "friendId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "auth-rest-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "loginRequest",
            "description": "loginRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/logout": {
      "post": {
        "tags": [
          "auth-rest-controller"
        ],
        "summary": "logout",
        "operationId": "logoutUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/messages": {
      "post": {
        "tags": [
          "message-rest-controller"
        ],
        "summary": "createMessage",
        "operationId": "createMessageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "messageDto",
            "description": "messageDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MessageDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/messages/history/{receiverId}": {
      "get": {
        "tags": [
          "message-rest-controller"
        ],
        "summary": "getMessageHistory",
        "operationId": "getMessageHistoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allParams",
            "in": "query",
            "description": "allParams",
            "required": false,
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "name": "receiverId",
            "in": "path",
            "description": "receiverId",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ViewListPage«MessageForListDto»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/new-access-token": {
      "post": {
        "tags": [
          "auth-rest-controller"
        ],
        "summary": "getNewAccessToken",
        "operationId": "getNewAccessTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "jwtRequest",
            "description": "jwtRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JwtRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JwtResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "updateUser",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDto",
            "description": "userDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/users/register": {
      "post": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "register",
        "operationId": "registerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userRegistrationDto",
            "description": "userRegistrationDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistrationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/update-password": {
      "put": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "updateUserPassword",
        "operationId": "updateUserPasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userPasswordDto",
            "description": "userPasswordDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserPasswordDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "user-rest-controller"
        ],
        "summary": "getUser",
        "operationId": "getUserUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserViewDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "FriendForListDto": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "FriendForListDto"
    },
    "JwtRequest": {
      "type": "object",
      "required": [
        "refreshToken"
      ],
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      },
      "title": "JwtRequest"
    },
    "JwtResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "expiresAt": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "type": "string"
        }
      },
      "title": "JwtResponse"
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "LoginRequest"
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "expiresAt": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "refreshToken": {
          "type": "string"
        }
      },
      "title": "LoginResponse"
    },
    "MessageDto": {
      "type": "object",
      "required": [
        "content",
        "receiverUsername"
      ],
      "properties": {
        "content": {
          "type": "string"
        },
        "receiverUsername": {
          "type": "string"
        }
      },
      "title": "MessageDto"
    },
    "MessageForListDto": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "sentAt": {
          "type": "string"
        }
      },
      "title": "MessageForListDto"
    },
    "UserDto": {
      "type": "object",
      "required": [
        "bio",
        "email",
        "firstName",
        "lastName",
        "status",
        "username"
      ],
      "properties": {
        "base64StringAvatar": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "pattern": "^([A-Z]|[a-z]|[А-Я]|[а-я])+$"
        },
        "lastName": {
          "type": "string",
          "pattern": "^([A-Z]|[a-z]|[А-Я]|[а-я])+$"
        },
        "status": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "pattern": ".*([A-Z]|[a-z]|[А-Я]|[а-я]).*"
        }
      },
      "title": "UserDto"
    },
    "UserPasswordDto": {
      "type": "object",
      "required": [
        "password",
        "passwordConfirmation"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "passwordConfirmation": {
          "type": "string"
        }
      },
      "title": "UserPasswordDto"
    },
    "UserRegistrationDto": {
      "type": "object",
      "required": [
        "email",
        "firstName",
        "lastName",
        "password",
        "passwordConfirmation",
        "username"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "pattern": "^([A-Z]|[a-z]|[А-Я]|[а-я])+$"
        },
        "lastName": {
          "type": "string",
          "pattern": "^([A-Z]|[a-z]|[А-Я]|[а-я])+$"
        },
        "password": {
          "type": "string"
        },
        "passwordConfirmation": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "pattern": ".*([A-Z]|[a-z]|[А-Я]|[а-я]).*"
        }
      },
      "title": "UserRegistrationDto"
    },
    "UserViewDto": {
      "type": "object",
      "properties": {
        "base64StringAvatar": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "lastName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "UserViewDto"
    },
    "ViewListPage«FriendForListDto»": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "viewDtoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FriendForListDto"
          }
        }
      },
      "title": "ViewListPage«FriendForListDto»"
    },
    "ViewListPage«MessageForListDto»": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "viewDtoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageForListDto"
          }
        }
      },
      "title": "ViewListPage«MessageForListDto»"
    }
  }
}